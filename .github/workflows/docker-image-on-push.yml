name: Build and Push Docker Image

on:
  push:
    branches:
      - Daniel-CI
      - main

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Dockerx build
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with: 
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
      with: 
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Determine version number
      id: determine_version
      run: |
        BUILD_DATE=$(date +%Y-%m-%d)
        echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
        

    - name: Create .env file
      run: |
        echo "BOT_FIREBASE_PROJECT_ID=${{ env.BOT_FIREBASE_PROJECT_ID }}" >> .env
        echo "BOT_ORDERS_CHAT_ID=${{ env.BOT_ORDERS_CHAT_ID }}" >> .env
        echo "BOT_LINK_FREECURRENCY_API=${{ env.BOT_LINK_FREECURRENCY_API }}" >> .env
        echo "BOT_LINK_OPEN_API=${{ env.BOT_LINK_OPEN_API }}" >> .env
        echo "BOT_CONVERSION_FEE=${{ env.BOT_CONVERSION_FEE }}" >> .env
        echo "BOT_WM_FEE=${{ env.BOT_WM_FEE }}" >> .env
        echo "BOT_PROFIT_PERCENT=${{ env.BOT_PROFIT_PERCENT }}" >> .env
        echo "BOT_PROFIT_PERMANENT=${{ env.BOT_PROFIT_PERMANENT }}" >> .env

    - name: Create service account json file
      run: |
        echo "${{ secrets.BOT_FIREBASE_SERVICE_ACCOUNT }}" > serviceAccount.firestore.json
        
    - name: Build Container 
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
      with:
        context: .
        load: true
        tags: saddff/delivery-bot:${{ env.BUILD_DATE }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max


    - name: Run Container
      run: |
        docker run -d -e TELEGRAM_TOKEN=${{ secrets.BOT_API_TOKEN }} \
        -e BUILD_DATE=${{ env.BUILD_DATE }} \
        --name delivery-bot-test \
        saddff/delivery-bot:${{ env.BUILD_DATE }}


    - name: Wait for Container to be Ready
      run: |
        echo "Waiting for bot to be ready..."
        sleep 20

    - name: Test Telegram Bot
      id: test_bot
      env:
        TELEGRAM_TOKEN: ${{ secrets.BOT_API_TOKEN }}
        CHAT_ID: ${{ secrets.TEST_CHAT_ID }}
      run: |
        MESSAGE="Test message from CI"
        RESPONSE=$(curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" -d chat_id=${CHAT_ID} -d text="${MESSAGE}")
        if [[ "$RESPONSE" != *"\"ok\":true"* ]]; then
          echo "Bot did not respond correctly: $RESPONSE"
          exit 1
        fi

    - name: Push Image
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 
      if: success() && steps.test_bot.outcome == 'success'
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: saddff/delivery-bot:${{ env.BUILD_DATE }}
        labels: ${{ steps.meta.outputs.labels }}
        
    - name: Logout from Docker
      run: docker logout
